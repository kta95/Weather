[{"C:\\Weather\\weather\\src\\index.js":"1","C:\\Weather\\weather\\src\\App.js":"2","C:\\Weather\\weather\\src\\components\\Countries.js":"3","C:\\Weather\\weather\\src\\components\\Filter.js":"4","C:\\Weather\\weather\\src\\components\\Country.js":"5"},{"size":177,"mtime":1639239073630,"results":"6","hashOfConfig":"7"},{"size":976,"mtime":1639413705463,"results":"8","hashOfConfig":"7"},{"size":550,"mtime":1639414680209,"results":"9","hashOfConfig":"7"},{"size":231,"mtime":1639240383108,"results":"10","hashOfConfig":"7"},{"size":720,"mtime":1639416715691,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rcsxef",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Weather\\weather\\src\\index.js",[],["24","25"],"C:\\Weather\\weather\\src\\App.js",["26"],"import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport axios from 'axios';\nimport Filter from './components/Filter'\nimport Countries from './components/Countries'\n\nfunction App() {\n\n  const [ countries, setNewCountries ] = useState([])\n  const [ newName, setNewName ] = useState('')\n\n  const handleName = (event) => {\n    setNewName(event.target.value);\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v3.1/all\")\n      .then(response => {\n        setNewCountries(response.data)\n        console.log('countries', response.data)\n        console.log('names', countries)\n      })\n  }\n  ,[])\n\n  const namesToShow = countries.filter(country => country.name.common.toUpperCase().includes(newName.toUpperCase()))\n\n  console.log('name to show', namesToShow)\n  return (\n      <>\n        <Filter name={newName} handler={handleName} />\n        <Countries className=\"countries\" countries={namesToShow} />\n      </>\n  )\n}\n\nexport default App;\n","C:\\Weather\\weather\\src\\components\\Countries.js",[],"C:\\Weather\\weather\\src\\components\\Filter.js",[],"C:\\Weather\\weather\\src\\components\\Country.js",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":25,"column":4,"nodeType":"34","endLine":25,"endColumn":6,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":21,"column":13,"nodeType":"38","endLine":21,"endColumn":61},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.","ArrayExpression",["41"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [countries]",{"range":"44","text":"45"},[630,632],"[countries]"]